{"version":3,"file":"ark-forms.cjs.development.js","sources":["../src/fieldReducer.ts","../src/formReducer.ts","../src/FormContext.ts","../src/ArkField.tsx","../src/ArkForm.tsx"],"sourcesContent":["import { FieldAction, FieldState, DeepPartial } from './types';\n\nexport const defaultFieldState: Omit<FieldState, 'configuration'> = {\n  changed: 0,\n  blurred: false,\n  dirty: false,\n  pristine: true,\n  filled: false,\n  value: '',\n  validity: {\n    valid: false,\n  },\n};\n\nconst handleChange = (state: FieldState, action: FieldAction): FieldState => {\n  const newState: FieldState = { ...state, changed: state.changed + 1, value: action.value!, filled: !!action.value };\n  const validateOnChange = action.configuration?.validateOnChange ?? state.configuration.validateOnChange;\n  const validate = action.configuration?.validate ?? state.configuration.validate;\n  if (validateOnChange) {\n    newState.dirty = true;\n    newState.pristine = false;\n    newState.validity = validate(action.value);\n  }\n  return newState;\n};\n\nconst handleBlur = (state: FieldState, action: FieldAction): FieldState => {\n  const validateOnBlur = action.configuration?.validateOnBlur ?? state.configuration.validateOnBlur;\n  const validate = action.configuration?.validate ?? state.configuration.validate;\n  if (!validateOnBlur || state.changed === 0) return { ...state, blurred: true };\n  const validity = validate(state.value);\n  return { ...state, dirty: true, pristine: false, blurred: true, validity };\n};\n\nconst setDirty = (state: FieldState): FieldState => {\n  return { ...state, dirty: true, pristine: false };\n};\n\nconst handleValidation = (state: FieldState, action: FieldAction): FieldState => {\n  const validate = action.configuration?.validate ?? state.configuration.validate;\n  const validity = validate(state.value);\n  return { ...state, validity };\n};\n\nexport const mergeState = (prevState: FieldState, newState: DeepPartial<FieldState>): FieldState => {\n  const result: Omit<FieldState, 'configuration' | 'validity'> = { ...prevState, ...newState };\n  return {\n    ...result,\n    configuration: { ...prevState.configuration, ...newState.configuration },\n    validity: { ...prevState.validity, ...newState.validity },\n  };\n};\n\nexport const fieldReducer = (state: FieldState, action: FieldAction) => {\n  switch (action.type) {\n    case 'change':\n      return handleChange(state, action);\n    case 'blur':\n      return handleBlur(state, action);\n    case 'dirty':\n      return setDirty(state);\n    case 'validate':\n      return handleValidation(state, action);\n    default:\n      throw new Error('Invalid action type');\n  }\n};\n","import { FormState, FormAction, FieldState } from './types';\nimport { fieldReducer } from './fieldReducer';\n\nexport const defaultFormState: FormState = {\n  dirty: false,\n  pristine: true,\n  invalid: true,\n  valid: false,\n  submitted: false,\n  changed: false,\n  blurred: 0,\n  fieldsData: new Map<string, FieldState>(),\n  configuration: {\n    name: '',\n    validateOnBlur: true,\n    validateOnChange: false,\n  },\n};\n\nconst handleSubmit = (state: FormState): FormState => {\n  return { ...state, ...handleValidation(state), submitted: true };\n};\n\nconst setFieldsDirty = (fieldsData: Map<string, FieldState>) => {\n  fieldsData.forEach((fieldState, fieldName) => {\n    if (fieldState.changed && !fieldState.dirty && !fieldState.configuration.validateOnChange) {\n      fieldsData.set(fieldName, fieldReducer(fieldReducer(fieldState, { type: 'dirty' }), { type: 'validate' }));\n    }\n  });\n};\n\nconst handleBlur = (state: FormState, action: FormAction): FormState => {\n  let newState: FormState = { ...state, blurred: state.blurred + 1 };\n  const fieldState = action.fieldState!;\n  newState.fieldsData.set(fieldState.configuration.name, fieldState);\n  if (!state.configuration.validateOnBlur || !state.changed) return newState;\n  newState.dirty = true;\n  newState.pristine = false;\n  setFieldsDirty(newState.fieldsData);\n  newState = handleValidation(newState);\n  return newState;\n};\n\nconst handleChange = (state: FormState, action: FormAction): FormState => {\n  let newState: FormState = { ...state, changed: true };\n  const fieldState = action.fieldState!;\n  newState.fieldsData.set(fieldState.configuration.name, fieldState);\n  if (state.configuration.validateOnChange) {\n    newState.dirty = true;\n    newState.pristine = false;\n    newState = handleValidation(newState);\n  }\n  return newState;\n};\n\nconst handleValidation = (state: FormState): FormState => {\n  const valid = isValid(state.fieldsData);\n  return { ...state, invalid: !valid, valid: valid };\n};\n\nconst registerField = (state: FormState, action: FormAction): FormState => {\n  state.fieldsData = new Map<string, FieldState>(state.fieldsData);\n  const fieldState = action.fieldState!;\n  state.fieldsData.set(fieldState.configuration.name, fieldState);\n  return handleValidation(state);\n};\nconst setField = (state: FormState, action: FormAction): FormState => {\n  const fieldState = action.fieldState!;\n  state.fieldsData.set(fieldState.configuration.name, fieldState);\n  return handleValidation(state);\n};\nconst unregisterField = (state: FormState, action: FormAction): FormState => {\n  state.fieldsData = new Map<string, FieldState>(state.fieldsData);\n  state.fieldsData.delete(action.fieldState!.configuration.name);\n  return handleValidation(state);\n};\n\nconst isValid = (fieldsData: Map<string, FieldState>) => {\n  if (!fieldsData) return false;\n  for (const [, fieldState] of fieldsData) {\n    if (!fieldState.validity.valid) {\n      return false;\n    }\n  }\n  return true;\n};\n\nexport const formReducer = (state: FormState, action: FormAction) => {\n  switch (action.type) {\n    case 'submit':\n      return handleSubmit(state);\n    case 'change':\n      return handleChange(state, action);\n    case 'blur':\n      return handleBlur(state, action);\n    case 'validate':\n      return handleValidation(state);\n    case 'registerField':\n      return registerField(state, action);\n    case 'setField':\n      return setField(state, action);\n    case 'unregisterField':\n      return unregisterField(state, action);\n    default:\n      throw new Error();\n  }\n};\n","import { createContext, useContext } from 'react';\nimport { FormContextInterface } from './types';\nimport { defaultFormState } from './formReducer';\n\nexport const FormContext = createContext<FormContextInterface>({\n  state: defaultFormState,\n  setFieldState: () => void 0,\n  setFieldValue: () => void 0,\n  dispatch: () => void 0,\n});\n\nexport const FormProvider = FormContext.Provider;\nexport const FormConsumer = FormContext.Consumer;\n\nFormContext.displayName = 'FormContext';\n\nexport function useFormContext(): FormContextInterface {\n  return useContext<FormContextInterface>(FormContext);\n}\n\nexport default FormContext;\n","import React, { useRef, useEffect, useMemo } from 'react';\nimport { ValidityStateInterface, FieldInterface, FormContextInterface, FormConfiguration, FieldState } from './types';\nimport { useFormContext } from './FormContext';\nimport { fieldReducer, defaultFieldState } from './fieldReducer';\n\nexport const ArkField = <ET extends HTMLElement & { value: string } = HTMLInputElement>(\n  props: FieldInterface<ET>\n): JSX.Element => {\n  const formContext = useFormContext();\n  const formState = formContext.state;\n  const fieldState = formState.fieldsData.get(props.name) ?? initializeFieldState(props, formState.configuration);\n\n  return useMemo(\n    () => <_ArkField {...props} formContext={formContext} state={fieldState}></_ArkField>,\n    [\n      // list all state props manually, since form context generates new state obj each time(immutable)\n      formState.blurred, // blurred - used to signal when using autocomplete(fill-up) on entire form with validateOnChange=false\n      formState.submitted,\n      formState.valid,\n      formState.dirty,\n      formState.changed,\n      formState.fieldsData,\n      // <Field> must only concern about its initialValue, validate props change,\n      // there's no value in changing other 'configurational' props and event handlers, such as 'name', 'validateOnChange', etc...\n      props.initialValue,\n      props.validate,\n      //\n      fieldState?.changed,\n      fieldState?.validity,\n      fieldState?.blurred,\n      fieldState?.dirty,\n      fieldState?.pristine,\n      fieldState?.filled,\n    ]\n  );\n};\n\ntype _FieldInterface<ET> = FieldInterface<ET> & {\n  formContext: FormContextInterface;\n  state: FieldState;\n};\n\nconst defaultValidity: ValidityStateInterface = {\n  valid: true,\n};\n\nconst getValidity = () => defaultValidity;\n\nconst initializeFieldState = <ET extends HTMLElement & { value: string } = HTMLInputElement>(\n  fieldProps: FieldInterface<ET>,\n  formConfiguration: FormConfiguration\n): FieldState => {\n  const value = fieldProps.initialValue?.toString() ?? '';\n  const newState: FieldState = {\n    ...defaultFieldState,\n    value,\n    filled: !!value,\n    configuration: {\n      validateOnChange: fieldProps.validateOnChange ?? formConfiguration.validateOnChange ?? true,\n      validateOnBlur: formConfiguration.validateOnBlur ?? false,\n      validate: fieldProps.validate ?? getValidity,\n      name: fieldProps.name,\n    },\n  };\n  return newState;\n};\n\nconst _ArkField = <ET extends HTMLElement & { value: string } = HTMLInputElement>(\n  props: _FieldInterface<ET>\n): JSX.Element => {\n  const {\n    initialValue,\n    onChange = () => void 0,\n    onFocus = () => void 0,\n    onBlur = () => void 0,\n    children,\n    formContext,\n    state,\n  }: _FieldInterface<ET> = props;\n  const { dispatch } = formContext;\n\n  const inputRef = useRef<ET>();\n  const didMountRef = useRef(false);\n\n  useEffect(() => {\n    if (!didMountRef.current) return;\n    const _initialValue = initialValue?.toString() ?? '';\n    dispatch({\n      type: 'change',\n      fieldState: fieldReducer(state, {\n        value: _initialValue,\n        type: 'change',\n        configuration: { validateOnChange: true },\n      }),\n    });\n  }, [initialValue]);\n\n  useEffect(() => {\n    // must be in  the latest effect\n    didMountRef.current = true;\n    dispatch({\n      type: 'registerField',\n      fieldState: fieldReducer(state, { type: 'validate' }),\n    });\n    return () => {\n      dispatch({\n        type: 'unregisterField',\n        fieldState: state,\n      });\n    };\n  }, []);\n\n  const _onChange = (event: React.ChangeEvent<ET>) => {\n    const value = inputRef.current!.value;\n    dispatch({\n      type: 'change',\n      fieldState: fieldReducer(state, { value: value, type: 'change' }),\n    });\n    onChange(event, value);\n  };\n  const _onBlur = (event: React.SyntheticEvent<ET>) => {\n    onBlur(event);\n    dispatch({\n      type: 'blur',\n      fieldState: fieldReducer(state, { type: 'blur' }),\n    });\n  };\n  const _onFocus = (event: React.FocusEvent<ET>) => {\n    onFocus(event);\n  };\n\n  const fieldProps = {\n    value: state.value,\n    ref: inputRef,\n    onChange: _onChange,\n    onBlur: _onBlur,\n    onFocus: _onFocus,\n  };\n  // if (process.env.NODE_ENV !== 'production') {\n  //    console.log('field', name, value, fieldState, formState);\n  // }\n\n  return children({\n    fieldProps,\n    fieldState: state,\n    formContext,\n  });\n};\n","import React, { useReducer } from 'react';\nimport { FormConfiguration, FormContextInterface, FieldState, FieldConfiguration } from './types';\nimport { FormProvider } from './FormContext';\nimport { fieldReducer, mergeState } from './fieldReducer';\nimport { formReducer, defaultFormState } from './formReducer';\n\ninterface FormProps {\n  name: string;\n  onSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\n  onChange?: (event: React.FormEvent<HTMLFormElement>) => void;\n  onBlur?: (event: React.FormEvent<HTMLFormElement>) => void;\n}\nexport interface FormInterface extends FormConfiguration {\n  name: string;\n  formContextRef?: React.MutableRefObject<FormContextInterface>;\n  onSubmit: (event: React.FormEvent<HTMLFormElement>, data: Map<string, FieldState>) => void;\n  onChange?: (event: React.FormEvent<HTMLFormElement>, data: Map<string, FieldState>) => void;\n  onBlur?: (event: React.FormEvent<HTMLFormElement>, data: Map<string, FieldState>) => void;\n  children: (props: {\n    formContext: FormContextInterface;\n    formProps: FormProps;\n  }) => React.ReactChild | React.ReactChild[];\n}\n\nexport const ArkForm = ({\n  name,\n  onSubmit,\n  children,\n  validateOnChange = false,\n  validateOnBlur = true,\n  formContextRef,\n}: FormInterface): JSX.Element => {\n  const [state, dispatch] = useReducer(formReducer, defaultFormState, state => {\n    state.fieldsData = new Map<string, FieldState>();\n    state.configuration = {\n      validateOnChange,\n      validateOnBlur,\n      name,\n    };\n    return state;\n  });\n  const getFieldState = (name: string) => {\n    const fieldState = state.fieldsData.get(name);\n    if (!fieldState) throw 'field name is incorrect';\n    return fieldState;\n  };\n  const setFieldState: FormContextInterface['setFieldState'] = (name, setNewState) => {\n    const newState = setNewState(getFieldState(name));\n    const mergedNewState = mergeState(getFieldState(name), newState);\n    const validatedState = fieldReducer(mergedNewState, { type: 'validate' });\n    dispatch({\n      type: 'setField',\n      fieldState: validatedState,\n    });\n  };\n  const setFieldValue = (name: string, value: string, configuration?: Partial<FieldConfiguration>) => {\n    const state = getFieldState(name);\n    const newFieldState = fieldReducer(state, {\n      value: value,\n      type: 'change',\n      configuration: { ...state.configuration, ...configuration, validateOnChange: true },\n    });\n    dispatch({\n      type: 'change',\n      fieldState: newFieldState,\n    });\n  };\n  const _onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    dispatch({ type: 'submit' });\n    if (state.valid) onSubmit(event, state.fieldsData);\n  };\n\n  const formProps = { name, onSubmit: _onSubmit };\n  const formContext = {\n    state,\n    setFieldState,\n    setFieldValue,\n    dispatch,\n  };\n  if (formContextRef) formContextRef.current = formContext;\n  return <FormProvider value={formContext}>{children({ formContext, formProps })}</FormProvider>;\n};\n"],"names":["defaultFieldState","changed","blurred","dirty","pristine","filled","value","validity","valid","handleChange","state","action","newState","validateOnChange","configuration","validate","handleBlur","validateOnBlur","setDirty","handleValidation","mergeState","prevState","result","fieldReducer","type","Error","defaultFormState","invalid","submitted","fieldsData","Map","name","handleSubmit","setFieldsDirty","forEach","fieldState","fieldName","set","isValid","registerField","setField","unregisterField","formReducer","FormContext","createContext","setFieldState","setFieldValue","dispatch","FormProvider","Provider","FormConsumer","Consumer","displayName","useFormContext","useContext","ArkField","props","formContext","formState","get","initializeFieldState","useMemo","React","_ArkField","initialValue","defaultValidity","getValidity","fieldProps","formConfiguration","toString","onChange","onFocus","onBlur","children","inputRef","useRef","didMountRef","useEffect","current","_initialValue","_onChange","event","_onBlur","_onFocus","ref","ArkForm","onSubmit","formContextRef","useReducer","getFieldState","setNewState","mergedNewState","validatedState","newFieldState","_onSubmit","preventDefault","formProps"],"mappings":"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"}